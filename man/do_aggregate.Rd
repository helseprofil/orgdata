% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate.R
\name{do_aggregate}
\alias{do_aggregate}
\title{Aggregate Data}
\usage{
do_aggregate(
  dt = NULL,
  source = c("grunnkrets", "fylke", "kommune", "bydel"),
  level = c("grunnkrets", "fylke", "kommune", "bydel"),
  year = NULL,
  aggregate.col = NULL,
  check = getOption("orgdata.debug.aggregate")
)
}
\arguments{
\item{dt}{Input data preferrably in a \code{data.table} format but is not mandatory}

\item{source}{What geographical granularity codes that is available in the
source data. This will be used for merging with the geo codebook generated
from \code{geo_levels()}}

\item{level}{Geographical granularity for aggregating data to}

\item{year}{Which year of georaphical code to use for recoding and
aggregating. If not specified, then current year will be used}

\item{aggregate.col}{Other columns to aggregate other than the standard ie.
\code{UTDANN}, \code{LANDSSB}, \code{LANDBAK} and \code{INNVKAT}}

\item{check}{If TRUE then output will keep variables for geographical levels
without aggregating it. This is useful to check for geographical codes that
are missing. Else use \code{options(orgdata.aggregate = FALSE)}}
}
\description{
Aggregate data according to the specification in \code{tbl_Filgruppe}
in \code{AGGREGERE} column. The input in argument \code{source} must be a lower
granularity level than the \code{level} input.
}
\examples{
\dontrun{
# To aggregate source data with enumeration area codes ie. grunnkrets, to
# manucipaltiy ie. kommune
dt <- make_file("BEFOLKNING")
DT <- do_aggregate(dt, source = "grunnkrets", level = "kommune")
}
}
\seealso{
Other aggregate functions: 
\code{\link{get_aggregate}()}
}
\concept{aggregate functions}
