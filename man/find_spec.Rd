% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql-spec.R
\name{find_spec}
\alias{find_spec}
\alias{find_query}
\title{File Specifications in Registration Database}
\usage{
find_spec(
  file = NULL,
  value = NULL,
  con = NULL,
  external = FALSE,
  char = NULL,
  num = NULL,
  opposite = FALSE
)

find_query(
  file = NULL,
  value = NULL,
  external = FALSE,
  char = NULL,
  num = NULL,
  opposite = FALSE
)
}
\arguments{
\item{file}{SQL file. If external is TRUE then complete filepath must be specified.}

\item{value}{The value for selection in SQL code with \code{base::sprintf} style.
For example the name of a \emph{filgruppe}.}

\item{con}{Connection to database}

\item{external}{If the SQL file is outside of the package. Default is \code{FALSE}.}

\item{char}{Which value are character}

\item{num}{Which value are numeric}

\item{opposite}{TRUE if numeric value will be read before character}
}
\value{
Out put will be a data.frame.
}
\description{
This function will find all specifications in the Access registration database via SQL code.
For example where the orginal data is and how the data will be restructured
and aggregated.. etc.. etc.. The specifications are registered in
the following tables:
\enumerate{
\item{tbl_Filgruppe}
\item{tbl_Koble}
\item{tbl_Orgfile}
\item{tbl_Innlesing}
}

SQL file must be written with \code{base::sprintf} style ie. \code{'\%s','\%d'} etc.
Please refer to \code{base::sprintf} documentation. In addition, SQL code must not contain comments.
Example of SQL code with \code{'\%s'}:
\code{SELECT * FROM tbl_Koble WHERE FILGRUPPE = '\%s'}
Which is saved in \code{C:/myfile.sql} and run as in the code example.
}
\examples{
\dontrun{
qr <- find_query("C:/myfile.sql", value = "BEFOLKNING", external = TRUE)
qr2 <- find_query("your.sql", char = "BEFOLKNING", num = 14)
}
}
